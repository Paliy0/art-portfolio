---
import Layout from "../layouts/Layout.astro";
import { fetchNotionData } from "../utils/getNotionItems.js";
import Card from "../components/Card.astro";

interface NotionPageItem {
  properties: {
    Order?: { number: number };
    Title?: { title: { plain_text: string }[] };
    image?: { rich_text: { href: string }[] };
    description?: { multi_select: { name: string }[] };
  };
}

const fetchedItems = await fetchNotionData();
const items = fetchedItems as NotionPageItem[];
const featuredItem = items.find((item) => item.properties.Order?.number === 0);
const otherItems = items.filter((item) => item.properties.Order?.number !== 0);
---

<Layout title="Home" backgroundColor="#333">
  <div class="container">
    <main class="main-content">
      <div class="logo-section">
        <img src="../../assets/img/logo.png" alt="Your Gallery Logo" />
      </div>
      <div class="header-section">
        <h2 class="header-title">Featured Item</h2>
        <p class="header-description">
          description blablabla
        </p>
      </div>
      <!-- Featured Item Section -->
      <div class="featured-item">
        <img
          src={featuredItem.properties?.image?.rich_text[0]?.href || ""}
          alt={featuredItem.properties?.Title?.title[0]?.plain_text || ""}
        />
      </div>

      <div class="header-section">
        <h2 class="header-title">Gallery</h2>
        <p class="header-description">
          description blablabla
        </p>
      </div>

      <div class="items-container">
        <div class="grid">
          {
            items
              .sort(
                (a, b) => a.properties.Order.number - b.properties.Order.number
              )
              .map((item) => {
                const pageItem = item as { properties: any };

                const title =
                  pageItem.properties?.Title?.title[0]?.plain_text || "";
                const imageUrl =
                  pageItem.properties?.image?.rich_text[0]?.href || "";
                const description =
                  pageItem.properties?.description?.multi_select[0]?.name || "";
                if (title && imageUrl) {
                  return (
                    <Card
                      title={title}
                      description={description}
                      imgUrl={imageUrl}
                    />
                  );
                }
              })
          }
        </div>
      </div>
    </main>
  </div>
</Layout>

<style>
  .container {
    padding: 1rem 2rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .main-content {
    margin-bottom: auto;
  }

  .header-section {
    margin: 2rem 0;
  }

  .logo-section {
    display: flex;          /* Enable flexbox */
    align-items: center;    /* Vertical alignment to the center */
    justify-content: center;/* Horizontal alignment to the center */
    width: 90vw;
    height: 90vh;
    padding: 1rem 2rem;
    margin: 0 auto;
    background-color: aqua;
    }


  .header-title {
    color: #dde0e4;
    font-size: 3rem;
    text-align: center;
    margin-bottom: 1.5rem;
    font-weight: bold;
  }

  .header-description {
    max-width: 60vw;
    color: #b1b8c3;
    font-size: 1.125rem;
    text-align: center;
    margin: 0 auto;
  }

  .featured-item {
    align-items: center;
    max-width: 90vw;
    padding: 1rem 2rem;
    margin: 0 auto;
  }

  .featured-item img{
    width: 90vw;
  }

  .items-container {
    max-width: 90vw;
    padding: 1rem 2rem;
    margin: 0 auto;
  }

  /* Default styles for mobile */
  .grid {
    display: grid;
    grid-template-columns: 1fr; /* One column for mobile */
    gap: 1.5rem;
  }

  /* Medium devices (e.g., tablets) */
  @media (min-width: 640px) {
    .grid {
      grid-template-columns: repeat(2, 1fr); /* Two columns for tablets */
    }
  }

  /* Large devices (e.g., small laptops, large tablets) */
  @media (min-width: 1024px) {
    .grid {
      grid-template-columns: repeat(
        3,
        1fr
      ); /* Three columns for larger devices */
      gap: 2.5rem;
    }
  }

  /* Extra large devices (e.g., large laptops, desktops) */
  @media (min-width: 1280px) {
    .grid {
      grid-template-columns: repeat(
        4,
        1fr
      ); /* Four columns for extra large screens */
    }
  }
</style>
